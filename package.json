{
  "name": "apple-container-manager",
  "displayName": "Apple Container Manager",
  "description": "Manage Apple container CLI resources directly from VS Code.",
  "version": "0.2.7",
  "publisher": "apple-container",
  "engines": {
    "vscode": ">=1.95.0"
  },
  "categories": [
    "Other"
  ],
  "main": "./dist/extension.js",
  "activationEvents": [
    "onStartupFinished",
    "onView:appleContainerSystem",
    "onView:appleContainerImages",
    "onView:appleContainerContainers",
    "onCommand:appleContainer.system.start",
    "onCommand:appleContainer.system.stop",
    "onCommand:appleContainer.system.refresh",
    "onCommand:appleContainer.containers.refresh",
    "onCommand:appleContainer.images.refresh",
    "onCommand:appleContainer.container.start",
    "onCommand:appleContainer.container.stop",
    "onCommand:appleContainer.container.remove",
    "onCommand:appleContainer.container.create",
    "onCommand:appleContainer.system.upgrade",
    "onCommand:appleContainer.refresh",
    "onCommand:appleContainer.image.remove",
    "onCommand:appleContainer.update.check",
    "workspaceContains:.vscode/settings.json"
  ],
  "contributes": {
    "configuration": {
      "title": "Apple Container",
      "properties": {
        "appleContainer.update.mode": {
          "type": "string",
          "enum": ["notify", "silent"],
          "default": "notify",
          "description": "Controls how update notifications are surfaced to the user."
        },
        "appleContainer.update.checkIntervalHours": {
          "type": "number",
          "default": 24,
          "description": "Interval in hours to re-check the latest container CLI release."
        },
        "appleContainer.system.autoStartOnWorkspaceOpen": {
          "type": "boolean",
          "default": false,
          "description": "Automatically start the container system service when the workspace opens."
        },
        "appleContainer.pollIntervalMs": {
          "type": "number",
          "default": 5000,
          "description": "Polling interval in milliseconds for refreshing container and image lists."
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "appleContainers",
          "title": "Apple Containers",
          "icon": "media/apple.svg"
        }
      ]
    },
    "views": {
      "appleContainers": [
        {
          "id": "appleContainerSystem",
          "name": "System"
        },
        {
          "id": "appleContainerImages",
          "name": "Images"
        },
        {
          "id": "appleContainerContainers",
          "name": "Containers"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "appleContainer.system.refresh",
          "when": "view == appleContainerSystem",
          "group": "navigation@1"
        },
        {
          "command": "appleContainer.system.start",
          "when": "view == appleContainerSystem && !appleContainer.system.running",
          "group": "navigation@2"
        },
        {
          "command": "appleContainer.system.stop",
          "when": "view == appleContainerSystem && appleContainer.system.running",
          "group": "navigation@2"
        },
        {
          "command": "appleContainer.images.refresh",
          "when": "view == appleContainerImages && appleContainer.system.running",
          "group": "navigation@1"
        },
        {
          "command": "appleContainer.container.create",
          "when": "view == appleContainerContainers && appleContainer.system.running",
          "group": "navigation@0"
        },
        {
          "command": "appleContainer.containers.refresh",
          "when": "view == appleContainerContainers && appleContainer.system.running",
          "group": "navigation@1"
        },
        {
          "command": "appleContainer.update.check",
          "when": "view == appleContainerSystem",
          "group": "navigation@2"
        }
      ],
      "view/item/context": [
        {
          "command": "appleContainer.system.start",
          "when": "view == appleContainerSystem && viewItem == system-stopped",
          "group": "inline@1"
        },
        {
          "command": "appleContainer.system.stop",
          "when": "view == appleContainerSystem && viewItem == system-running",
          "group": "inline@1"
        },
        {
          "command": "appleContainer.container.start",
          "when": "view == appleContainerContainers && viewItem =~ /container-stopped($|-deletable)/",
          "group": "inline@1"
        },
        {
          "command": "appleContainer.container.stop",
          "when": "view == appleContainerContainers && viewItem == container-running",
          "group": "inline@1"
        },
        {
          "command": "appleContainer.container.remove",
          "when": "view == appleContainerContainers && viewItem == container-stopped-deletable",
          "group": "inline@3"
        },
        {
          "command": "appleContainer.image.remove",
          "when": "view == appleContainerImages && viewItem == image-deletable",
          "group": "inline@2"
        },
        {
          "command": "appleContainer.system.upgrade",
          "when": "view == appleContainerSystem && viewItem == system-upgrade-available",
          "group": "inline@3"
        }
      ],
      "commandPalette": [
        {
          "command": "appleContainer.system.start",
          "when": "true",
          "group": "appleContainer@1"
        },
        {
          "command": "appleContainer.system.stop",
          "when": "true",
          "group": "appleContainer@2"
        },
        {
          "command": "appleContainer.container.create",
          "when": "true",
          "group": "appleContainer@3"
        },
        {
          "command": "appleContainer.container.start",
          "when": "true",
          "group": "appleContainer@4"
        },
        {
          "command": "appleContainer.container.stop",
          "when": "true",
          "group": "appleContainer@5"
        },
        {
          "command": "appleContainer.container.remove",
          "when": "true",
          "group": "appleContainer@6"
        },
        {
          "command": "appleContainer.image.remove",
          "when": "true",
          "group": "appleContainer@8"
        },
        {
          "command": "appleContainer.system.refresh",
          "when": "true",
          "group": "appleContainer@9"
        },
        {
          "command": "appleContainer.containers.refresh",
          "when": "true",
          "group": "appleContainer@10"
        },
        {
          "command": "appleContainer.images.refresh",
          "when": "true",
          "group": "appleContainer@11"
        },
        {
          "command": "appleContainer.refresh",
          "when": "true",
          "group": "appleContainer@12"
        },
        {
          "command": "appleContainer.system.upgrade",
          "when": "true",
          "group": "appleContainer@13"
        },
        {
          "command": "appleContainer.update.check",
          "when": "true",
          "group": "appleContainer@14"
        }
      ]
    },
    "commands": [
      {
        "command": "appleContainer.system.start",
        "title": "Start System",
        "category": "Apple Container",
        "icon": "$(debug-start)"
      },
      {
        "command": "appleContainer.system.stop",
        "title": "Stop System",
        "category": "Apple Container",
        "icon": "$(debug-stop)"
      },
      {
        "command": "appleContainer.system.refresh",
        "title": "Refresh System Status",
        "category": "Apple Container",
        "icon": "$(refresh)"
      },
      {
        "command": "appleContainer.containers.refresh",
        "title": "Refresh Containers",
        "category": "Apple Container",
        "icon": "$(refresh)"
      },
      {
        "command": "appleContainer.images.refresh",
        "title": "Refresh Images",
        "category": "Apple Container",
        "icon": "$(refresh)"
      },
      {
        "command": "appleContainer.container.start",
        "title": "Start Container",
        "category": "Apple Container",
        "icon": "$(debug-start)"
      },
      {
        "command": "appleContainer.container.stop",
        "title": "Stop Container",
        "category": "Apple Container",
        "icon": "$(debug-stop)"
      },
      {
        "command": "appleContainer.container.remove",
        "title": "Remove Container",
        "category": "Apple Container",
        "icon": "$(trash)"
      },
      {
        "command": "appleContainer.container.create",
        "title": "Create Container",
        "category": "Apple Container",
        "icon": "$(add)"
      },
      {
        "command": "appleContainer.image.remove",
        "title": "Remove Image",
        "category": "Apple Container",
        "icon": "$(trash)"
      },
      {
        "command": "appleContainer.refresh",
        "title": "Refresh All Views",
        "category": "Apple Container"
      },
      {
        "command": "appleContainer.system.upgrade",
        "title": "Open Latest CLI Release",
        "category": "Apple Container",
        "icon": "$(cloud-download)"
      },
      {
        "command": "appleContainer.update.check",
        "title": "Check for CLI Updates",
        "category": "Apple Container",
        "icon": "$(cloud)"
      }
    ]
  },
  "scripts": {
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "lint": "eslint ./src --ext .ts",
    "package": "vsce package",
    "vscode:prepublish": "npm run compile"
  },
  "devDependencies": {
    "@types/node": "^20.11.30",
    "@types/vscode": "^1.95.0",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "eslint": "^8.57.0",
    "typescript": "^5.4.0",
    "vsce": "^2.15.0"
  }
}
